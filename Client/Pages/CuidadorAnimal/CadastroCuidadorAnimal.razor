@page "/cuidadoranimal/cadastro"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="card m-3">
    <h4 class="card-header">Cadastro Cuidador Animal</h4>
    <div class="card-body">
        <EditForm Model="@cuidadoranimal" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="form-row">
                <label>Cuidador</label>
                <select @bind="cuidadoranimal.IdCuidador"> 
                    <option value="">Selecione o Cuidador</option>
                    @foreach (var cuidador in CuidadorList)
                            {
                                <option value="@cuidador.IdCuidador">@cuidador.Nome</option>
                            }
                </select>
            </div>

            <div class="form-row">
                        <label>Animal</label>
                        <select @bind="cuidadoranimal.IdAnimal">
                            <option value="">Selecione o Animal</option>
                            @foreach (var animal in AnimalList)
                            {
                                <option value="@animal.IdAnimal">@animal.Nome</option>
                            }
                        </select>
            </div>
            <div class="form-row">
                        <label>Observação</label>
                        <InputTextArea @bind-Value="cuidadoranimal.Observacoes" class="form-control" />
            </div>
            <div class="text-center">
                        <button type="submit" class="btn btn-primary">Salvar</button>
                        <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
                </EditForm>
            </div>
        </div>

@code {
    private CuidadorAnimal cuidadoranimal = new CuidadorAnimal();
    private EditContext editContext { get; set; }
    private List<Cuidador> CuidadorList = new List<Cuidador>();
    private List<Animal> AnimalList = new List<Animal>();

    //[Parameter]
    //public string Text { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        var Cuidador = await Http.GetFromJsonAsync<List<Cuidador>>("/Cuidador/List");
        if(Cuidador != null){
            foreach (var item in Cuidador)
            {
                CuidadorList.Add(item);
            }
        }

        var animal = await Http.GetFromJsonAsync<List<Animal>>("/Animal/List");
        //var animalByCategory = animal.Where(c => c.IdAnimal == Convert.ToInt32(value));
        if(Cuidador != null){
            foreach (var item in animal) //LINQ
            {
                AnimalList.Add(item);
            }
        }
    }

    /*
    private async Task OnChangeCat(string value)
    {
        //cuidadoranimal.IdCuidador = Convert.ToInt32(value); //Seta o valor do Cuidador no CuidadorAnimal
        
    } 
    */

    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("/CuidadorAnimal/Create", cuidadoranimal);
        NavigationManager.NavigateTo("animal/list");
    }
}