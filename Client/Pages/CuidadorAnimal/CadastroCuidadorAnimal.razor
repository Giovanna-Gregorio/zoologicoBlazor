@page "/Pedido/CadastroPedido"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="card m-3">
    <h4 class="card-header">Cadastro Cuidador Animal</h4>
    <div class="card-body">
        <EditForm Model="@cuidadoranimal" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="form-row">
                <label>Cuidador</label>
                <InputSelect 
                    ValueExpression="@(()=>cuidadoranimal.IdCuidador)" 
                    Value="@cuidadoranimal.IdCuidador"
                    ValueChanged="@((string value) => OnChangeCat(value))"> 
                    <option value="">Selecione o Cuidador</option>
                    @foreach (var cuidador in CuidadorList)
                            {
                                <option value="@cuidador.IdCuidador">@cuidador.Nome</option>
                            }
                </InputSelect>
            </div>

            <div class="form-row">
                        <label>Animal</label>
                        <InputSelect @bind-Value="cuidadoranimal.IdAnimal">
                            <option value="">Selecione o Animal</option>
                            @foreach (var animal in AnimalList)
                            {
                                <option value="@animal.IdAnimal">@animal.Nome</option>
                            }
                        </InputSelect>
            </div>
            <div class="form-row">
                        <label>Observação</label>
                        <InputNumber @bind-Value="cuidadoranimal.Observacoes" class="form-control" />
            </div>
            <div class="text-center">
                        <button type="submit" class="btn btn-primary">Salvar</button>
                        <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
                </EditForm>
            </div>
        </div>

        @code {
    private CuidadorAnimal cuidadoranimal = new CuidadorAnimal();
    private EditContext editContext { get; set; }
    private List<Cuidador> CuidadorList = new List<Cuidador>();
    private List<Animal> AnimalList = new List<Animal>();

    [Parameter]
    public string Text { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var Cuidador = await Http.GetFromJsonAsync<List<Cuidador>>("/Cuidador/List");
        foreach (var item in Cuidador)
        {
            CuidadorList.Add(item);
        }
    }



    private async Task OnChangeCat(string value)
    {
        cuidadoranimal.IdCuidador = Convert.ToInt32(value); //Seta o valor do Cuidador no CuidadorAnimal
        var animal = await Http.GetFromJsonAsync<List<Animal>>("/Animal/List");
        AnimalList.Clear();
        //var animalByCategory = animal.Where(c => c.IdAnimal == Convert.ToInt32(value));
        foreach (var item in animal) //LINQ
        {
            AnimalList.Add(item);
        }
    }

    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("/CuidadorAnimal/Create", cuidadoranimal);
        NavigationManager.NavigateTo("Animal/ListAnimal");
    }

}